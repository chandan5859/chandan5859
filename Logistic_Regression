### First, let's try LOGISTIC REGRESSION
from sklearn.linear_model import LogisticRegression

from numpy import loadtxt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score


# Posts in tf-idf representation
X = X_tfidf

# Training for each type in types_list individually
for l in range(len(types_list)):
    
    # Let's train type indicator individually
    Y = list_personality[:,l]

    # split data into train and test sets
    test_size = 0.25  # 75-25 split of dataset 
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=test_size)

    # fit model on training data
    model = LogisticRegression()
    model.fit(X_train, y_train)

    # make predictions for test data
    y_pred = model.predict(X_test)
    predictions = [round(value) for value in y_pred]
    # evaluate predictions
    accuracy = accuracy_score(y_test, predictions)
    print(" %s Accuracy: %.2f%%" % (types_list[l], accuracy * 100.0))
